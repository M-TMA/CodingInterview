Hi,

 

My exercise for those 2 guys (and to be made independently).

 

I would like to see the following achieved:

 

-          Have a sample program logging random messages and emitting them over syslog.  (Use a Log4J syslog appender)

-          Have fluentD in the picture to process those syslog messages and push it to an ElasticSearch instance

-          See the messages in Kibana

 

This is largely an exercise into absorbing quickly a lot of new stuff.   This is the starting point, we will then do an add-on once we have reached this point.  Can you ask them to reach out to me to discuss?

 

Regards,

-------------------------------------------------------------------------------------------------------------------------------------------------------------
									SOLUTION
*************************************************************************************************************************************************************
 

------------------------------------------------------------------------------------------------------------------------------------------
SETUP
------------------------------------------------------------------------------------------------------------------------------------------
sudo env http_proxy=http://10.10.10.10:8080 apt-get update



******************************************************************************************************************************************

------------------------------------------------------------------------------------------------------------------------------------------
ERROR
------------------------------------------------------------------------------------------------------------------------------------------
tnhminh@server95222:~$ sudo /usr/sbin/td-agent-gem install fluent-plugin-elasticsearch
ERROR:  Could not find a valid gem 'fluent-plugin-elasticsearch' (>= 0), here is why:
          Unable to download data from https://rubygems.org/ - Errno::ETIMEDOUT: Connection timed out - connect(2) for "api.rubygems.org" port 443 (https://api.rubygems.org/specs.4.8.gz)


-> RESOLVED: 

/opt/td-agent/embedded/bin/fluent-gem install fluent-plugin-elasticsearch --http-proxy=http://10.10.10.10:8080 (add proxy there)
******************************************************************************************************************************************

------------------------------------------------------------------------------------------------------------------------------------------
td-agent.conf
------------------------------------------------------------------------------------------------------------------------------------------
####
## Output descriptions:
##


# Apache Access Logs
#<source>
#  type tail
#  format apache2
#  path /var/log/apache2/access.log
#  pos_file /var/log/td-agent/httpd.access.pos
#  tag apache.access
#</source>

# Local7 [ERROR] Log
# <source>
#  @type tail
#  format /(?<time>\w+ \w+ \d+:\d+:\d+) (?<hostname>\w+) (?<level>\[\w+\]) (?<hello>\w+:\d+) - (?<mesage>[\w ]+)$/
#  path /var/log/local7.log
#  pos_file /var/log/td-agent/httpd.error.pos
#  tag local7.log
# </source>

# Listen to Syslog
#<source>
#  @type syslog
# bind 192.168.95.222
#  port 42185
#  tag hostname.system
#protocol_type udp
#</source>

<source>
  @type tail
  bind 192.168.95.222
  format syslog
  port 42185
  path /var/log/syslog
  pos_file /var/log/td-agent/sys.log.pos
  tag sys.log
protocol_type udp
</source>

# SDC Log
<source>
  @type tail
  format /(?<time>[\d-]+ \d+:\d+:[-+]?[0-9]*\.?[0-9]*.\d+) (?<level>[DEBUG|INFO|WARN|FATAL|ERROR]+)(?<process>[\s+]+\[[\s\w.-]+\])-(?<domain>\[[\w.-]+\]) (?<message>[\n\w :,(.%)\[\]\/!=+-]+)/
  path /home/tnhminh/AMS/trunk/basic.app/package/target/ams-9.5.95.00-SNAPSHOT/server/wildfly-8.2.1.Final/standalone/debug/sdc.log
  pos_file /var/log/td-agent/sdc.log.pos
  tag sdc.log
</source>

# Treasure Data (http://www.treasure-data.com/) provides cloud based data
# analytics platform, which easily stores and processes data from td-agent.
# FREE plan is also provided.
# @see http://docs.fluentd.org/articles/http-to-td
#
# This section matches events whose tag is td.DATABASE.TABLE
<match td.*.*>
  type tdlog
  apikey YOUR_API_KEY

  auto_create_table
  buffer_type file
  buffer_path /var/log/td-agent/buffer/td

  <secondary>
    type file
    path /var/log/td-agent/failed_records
  </secondary>
</match>

## match tag=debug.** and dump to console
<match debug.**>
  type stdout
</match>

####
## Source descriptions:
##

## built-in TCP input
## @see http://docs.fluentd.org/articles/in_forward
<source>
  type forward
</source>

## built-in UNIX socket input
#<source>
#  type unix
#</source>

# HTTP input
 #POST http://localhost:8888/<tag>?json=<json>
 #POST http://localhost:8888/td.myapp.login?json={"user"%3A"me"}
# @see http://docs.fluentd.org/articles/in_http
<source>
  type http
  port 8888
</source>

## live debugging agent
<source>
  type debug_agent
  bind 127.0.0.1
  port 24230
</source>

####
## Examples:
##

## File input
## read apache logs continuously and tags td.apache.access
#<source>
#  type tail
#  format apache
#  path /var/log/httpd-access.log
#  tag td.apache.access
#</source>

## File output
## match tag=local.** and write to file
#<match local.**>
#  type file
#  path /var/log/td-agent/access
#</match>

## Forwarding
## match tag=system.** and forward to another td-agent server
#<match system.**>
#  type forward
#  host 192.168.0.11
#  # secondary host is optional
#  <secondary>
#    host 192.168.0.12
#  </secondary>
#</match>

## Multiple output
## match tag=td.*.* and output to Treasure Data AND file
#<match td.*.*>
#  type copy
#  <store>
#    type tdlog
#    apikey API_KEY
#    auto_create_table
#    buffer_type file
#    buffer_path /var/log/td-agent/buffer/td
#  </store>
#  <store>
#    type file
#    path /var/log/td-agent/td-%Y-%m-%d/%H.log
#  </store>
#</match>

# Store Data in Elasticsearch
<match *.**>
  type copy
  <store>
    type elasticsearch
    host 192.168.95.222
    port 9200
    include_tag_key true
    tag_key @log_name
    logstash_format true
    flush_interval 5s
  </store>
 
</match>

******************************************************************************************************************************************

------------------------------------------------------------------------------------------------------------------------------------------
/etc/rsyslog.conf
------------------------------------------------------------------------------------------------------------------------------------------
*.* @192.168.95.222:42185 -> rsyslog.conf

# provides UDP syslog reception
$ModLoad imudp
$UDPServerRun 514
******************************************************************************************************************************************

------------------------------------------------------------------------------------------------------------------------------------------
LOG FILE EXAMPLE
------------------------------------------------------------------------------------------------------------------------------------------
Jun 23 15:31:45 localhost [DEBUG] Hello:10 - Sample debug message
Jun 23 15:31:45 localhost [INFO] Hello:11 - Sample info message
Jun 23 15:31:45 localhost [WARN] Hello:12 - Sample warn message
Jun 23 15:31:45 localhost [ERROR] Hello:13 - Sample error message
Jun 23 15:31:45 localhost [FATAL] Hello:14 - Sample fatal message

******************************************************************************************************************************************
------------------------------------------------------------------------------------------------------------------------------------------
LOG CONTENT
------------------------------------------------------------------------------------------------------------------------------------------

2016-06-23 13:19:52 +0700 [info]: following tail of /var/log/apache2/access.log
2016-06-23 13:19:52 +0700 [info]: listening syslog socket on 0.0.0.0:42185 with udp
2016-06-23 13:20:02 +0700 [info]: Connection opened to Elasticsearch cluster => {:host=>"192.168.95.222", :port=>9200, :scheme=>"http"}

******************************************************************************************************************************************

------------------------------------------------------------------------------------------------------------------------------------------
PATTERN FORMAT - FLUENTD
------------------------------------------------------------------------------------------------------------------------------------------

(?<time>[\d-]+ \d+:\d+:[-+]?[0-9]*\.?[0-9]*.\d+) (?<level>[DEBUG|INFO|WARN|FATAL|ERROR]+)(?<process>[\s+]+\[[\s\w.-]+\])-(?<domain>\[[\w.-]+\]) (?<message>[\n\w :,(.%)\[\]\/!=+-]+)

******************************************************************************************************************************************


